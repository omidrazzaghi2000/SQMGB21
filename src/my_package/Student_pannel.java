/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my_package;

import ir.fallahpoor.jalalidatepicker.JalaliDatePicker;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Sahra
 */
public class Student_pannel extends javax.swing.JFrame {

    String ChoosenDate = "";
    public static String studentUserName = "";
    public static int studentCredit = 0;
    public static boolean isStart = false;
    public static int formerFoodPrice = 0;

    /**
     * Creates new form Student_pannel
     */
    public Student_pannel(String sun) {
        initComponents();
        studentUserName = sun;
        date_label.setText(ChoosenDate);
        JFrame frame = new JFrame();
        frame.setLayout(new BorderLayout());

        JalaliDatePicker jalaliDatePicker2 = new JalaliDatePicker(frame);
        ChoosenDate = jalaliDatePicker2.getYear() + "." + jalaliDatePicker2.getMonth() + "." + jalaliDatePicker2.getDay();
        date_label.setText(ChoosenDate);
        update_table();
        isStart = true;
        updateCredit();

    }

    public void updateReportTable() {
        report_date_label.setText(ChoosenDate);
        Connection conn = null;
        System.out.println("START");
        try {
            // db parameters  
            String url = "jdbc:sqlite:src\\my_package\\smane_database.db";
            // create a connection to the database  
            conn = DriverManager.getConnection(url);

            System.out.println("Connection to SQLite has been established.");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
//                    ٍهمه چی اوکیه

                    String query = "SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.breakfast WHERE Reserves.breakfast = Foods.id) where username_id = " + studentUserName + " UNION SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.lunch WHERE Reserves.lunch = Foods.id) where username_id = " + studentUserName + " UNION SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.dinner WHERE Reserves.dinner = Foods.id) where username_id = " + studentUserName;
                    try ( Statement stmt = conn.createStatement()) {
                        ResultSet rs = stmt.executeQuery(query);
                        student_report_table.setModel(resultSetToTableModel(rs));

                    } catch (SQLException e) {
                        System.out.println(e.getMessage());
                    }

                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());

            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        date_label = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        student_credit_label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        student_food_table = new javax.swing.JTable();
        meal_combo = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        radio_btn_guest = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        guest_username = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        student_report_table = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        report_date_label = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        student_credit_label_2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("دانشجــو");

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane1.setForeground(new java.awt.Color(51, 51, 51));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(0, 51, 255));
        jLabel6.setText("تاریخ:");

        date_label.setForeground(new java.awt.Color(51, 102, 255));
        date_label.setText("00/00/00");

        jLabel8.setForeground(new java.awt.Color(0, 51, 255));
        jLabel8.setText("اعتبار:");

        student_credit_label.setForeground(new java.awt.Color(0, 51, 255));
        student_credit_label.setText("0");

        student_food_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "غذا", "قیمت", "انتخاب"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(student_food_table);

        meal_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "انتخاب وعده ...", "صبحانه", "نهار", "شام" }));
        meal_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meal_comboActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 255, 204));
        jButton2.setText("رزرو");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        radio_btn_guest.setText("مهمان کردن دانشجوی دیگر");
        radio_btn_guest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_btn_guestActionPerformed(evt);
            }
        });

        jLabel10.setText("شماره دانشجویی مورد نظر را وارد کنید");

        jButton4.setText("انتخاب تاریخ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(meal_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(guest_username, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(student_credit_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radio_btn_guest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(date_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(date_label)
                    .addComponent(radio_btn_guest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(student_credit_label, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel10)
                        .addComponent(guest_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(7, 7, 7)
                        .addComponent(meal_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("رزرو غذا", jPanel1);

        jLabel2.setText("مبلغ اعتبار خود را وارد کنید:");

        jButton1.setBackground(new java.awt.Color(0, 255, 0));
        jButton1.setText("افزایش اعتبار");

        jLabel3.setText("شماره دانشحویی مورد نظر را وارد کنید:");

        jLabel4.setForeground(new java.awt.Color(51, 102, 255));
        jLabel4.setText("0");

        jLabel5.setForeground(new java.awt.Color(51, 102, 255));
        jLabel5.setText("اعتبار:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(172, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(279, 279, 279))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        jTabbedPane1.addTab("افرایش اعتبار", jPanel2);

        student_report_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "غذا", "قیمت", "روز", "وعده", "حذف"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(student_report_table);

        jButton3.setBackground(new java.awt.Color(255, 255, 51));
        jButton3.setText("حذف");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(0, 102, 255));
        jLabel11.setText("تاریخ:");

        report_date_label.setForeground(new java.awt.Color(0, 102, 255));

        jLabel13.setForeground(new java.awt.Color(0, 102, 255));
        jLabel13.setText("اعتبار:");

        student_credit_label_2.setForeground(new java.awt.Color(0, 102, 255));
        student_credit_label_2.setText("0");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("گزارش عملکرد");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(report_date_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(247, 247, 247)
                        .addComponent(student_credit_label_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addGap(31, 31, 31))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 33, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(report_date_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(student_credit_label_2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addGap(34, 34, 34))
        );

        jTabbedPane1.addTab("گزارش", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radio_btn_guestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_btn_guestActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_radio_btn_guestActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (radio_btn_guest.isSelected()) {
           /*مهمان کردن دانشجو هاي ديگر*/
           /*اول چک کنيم ببينم چنين دانشجويي وجود داره بعد از اعتبار همين دانشجو کم کنيم و به رزرو اون دانشجو اضافه کنيم.*/
           Connection conn = null;
            System.out.println("START");
            try {
                // db parameters  
                String url = "jdbc:sqlite:src\\my_package\\smane_database.db";
                // create a connection to the database  
                conn = DriverManager.getConnection(url);

                System.out.println("Connection to SQLite has been established.");
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } finally {
                try {
                    if (conn != null) {
//                    ٍهمه چی اوکیه
                        
                        try (Statement stmt = conn.createStatement()){
                            ResultSet rs = stmt.executeQuery("SELECT * from Users WHERE username = "+guest_username.getText());
                            if(rs.next() == false){
                                JOptionPane.showMessageDialog(this, "شماره دانشجويي مهمان درست نيست.");    
                            }else{
                                JOptionPane.showMessageDialog(this, "شماره دانشجويي درسته");
                            }
                            

                        } catch (SQLException e) {
                            
                        }

                        conn.close();
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());

                }

            }
        } else {
            Connection conn = null;
            System.out.println("START");
            try {
                // db parameters  
                String url = "jdbc:sqlite:src\\my_package\\smane_database.db";
                // create a connection to the database  
                conn = DriverManager.getConnection(url);

                System.out.println("Connection to SQLite has been established.");
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } finally {
                try {
                    if (conn != null) {
//                    ٍهمه چی اوکیه
                        int rowSelected = student_food_table.getSelectedRow();
                        if (rowSelected == -1) {
                            conn.close();
                            return;
                        }
                        String foodID = String.valueOf(student_food_table.getValueAt(rowSelected, 0));
                        String query = "";
                        int foodPrice = Integer.parseInt(String.valueOf(student_food_table.getValueAt(rowSelected, 6)));
                        if (foodPrice > studentCredit) {
                            conn.close();
                            JOptionPane.showMessageDialog(this, "اعتبار کافي نيست");
                            return;
                        }
                        switch (meal_combo.getSelectedIndex()) {
                            case 1:/*صبحانه*/
                                query = "INSERT OR replace INTO Reserves (reserve_date,username_id,breakfast,lunch,dinner) VALUES (\"" + ChoosenDate + "\"," + studentUserName + "," + foodID + ",(SELECT lunch from Reserves WHERE username_id=" + studentUserName + " AND reserve_date=\"" + ChoosenDate + "\"),(SELECT dinner from Reserves WHERE username_id=" + studentUserName + "  AND reserve_date=\"" + ChoosenDate + "\"))";
                                break;
                            case 2:/*ناهار*/
                                query = "INSERT OR replace INTO Reserves (reserve_date,username_id,breakfast,lunch,dinner) VALUES (\"" + ChoosenDate + "\"," + studentUserName + ",(SELECT breakfast from Reserves WHERE username_id=" + studentUserName + " AND reserve_date=\"" + ChoosenDate + "\")," + foodID + ",(SELECT dinner from Reserves WHERE username_id=" + studentUserName + " AND reserve_date=\"" + ChoosenDate + "\"))";
                                break;
                            case 3:/*شام*/
                                query = "INSERT OR replace INTO Reserves (reserve_date,username_id,breakfast,lunch,dinner) VALUES (\"" + ChoosenDate + "\"," + studentUserName + ",(SELECT breakfast from Reserves WHERE username_id=" + studentUserName + " AND reserve_date=\"" + ChoosenDate + "\"),(SELECT lunch from Reserves WHERE username_id=" + studentUserName + " AND reserve_date=\"" + ChoosenDate + "\")," + foodID + ")";
                                break;

                        }
                        String getFormerFoodPriceQuery = "SELECT price FROM (SELECT * FROM (SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.breakfast WHERE Reserves.breakfast = Foods.id) where username_id = " + studentUserName + " UNION SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.lunch WHERE Reserves.lunch = Foods.id) where username_id = " + studentUserName + " UNION SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.dinner WHERE Reserves.dinner = Foods.id) where username_id = " + studentUserName + ")) WHERE meal = " + meal_combo.getSelectedIndex();
                        try ( Statement stmt = conn.createStatement()) {

                            ResultSet rs = stmt.executeQuery(getFormerFoodPriceQuery);
                            formerFoodPrice = 0;
                            formerFoodPrice = rs.getInt("price");
                            System.out.println(formerFoodPrice);

                        } catch (SQLException e) {
                            System.out.println(e.getMessage());
                        }
                        try ( Statement stmt = conn.createStatement()) {

                            stmt.executeUpdate(query);

                        } catch (SQLException e) {
                            System.out.println(e.getMessage());
                        }
                        updateCredit();

                        conn.close();
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());

                }

            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(() -> {

            JFrame frame = new JFrame();
            frame.setLayout(new BorderLayout());
            JalaliDatePicker jalaliDatePicker = new JalaliDatePicker(frame);
            jalaliDatePicker.setDatePickerDialogSize(600, 300);
            System.out.println(jalaliDatePicker.getDay());

            jalaliDatePicker.addDateChangeListener(
                    (newYear, newMonth, newDay)
                    -> {
                ChoosenDate = newYear + "." + newMonth + "." + newDay;
            });

            frame.add(jalaliDatePicker, BorderLayout.CENTER);
            JButton setDateButton = new JButton("ثبت تاريخ");
            frame.add(setDateButton, BorderLayout.SOUTH);

            frame.setSize(250, 100);
            frame.setResizable(false);
            frame.setLocationRelativeTo(null);
            frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            frame.setVisible(true);

            setDateButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    frame.setVisible(false);/*بستن فريم انتخاب تاريخ*/
                    date_label.setText(ChoosenDate);
                    update_table();
                }
            });
        });
    }//GEN-LAST:event_jButton4ActionPerformed

    private void meal_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meal_comboActionPerformed
        // TODO add your handling code here:
        update_table();
    }//GEN-LAST:event_meal_comboActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        updateReportTable();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        /* حذف */
        Connection conn = null;
        System.out.println("START");
        try {
            // db parameters  
            String url = "jdbc:sqlite:src\\my_package\\smane_database.db";
            // create a connection to the database  
            conn = DriverManager.getConnection(url);

            System.out.println("Connection to SQLite has been established.");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
//                    ٍهمه چی اوکیه
                    int rowSelected = student_report_table.getSelectedRow();
                    if (rowSelected == -1) {
                        conn.close();
                        return;
                    }
                    String query = "";
                    switch (Integer.parseInt(String.valueOf(student_report_table.getValueAt(rowSelected, 5)))) {
                        case 1:/*صبحانه*/
                            query = "UPDATE Reserves  SET breakfast = NULL where username_id=" + studentUserName;
                            break;
                        case 2:/*ناهار*/
                            query = "UPDATE Reserves  SET lunch = NULL where username_id=" + studentUserName;
                            break;
                        case 3:/*شام*/
                            query = "UPDATE Reserves  SET dinner = NULL where username_id=" + studentUserName;
                            break;

                    }

                    try ( Statement stmt = conn.createStatement()) {
                        stmt.executeUpdate(query);
                        studentCredit = studentCredit + Integer.parseInt(String.valueOf(student_report_table.getValueAt(rowSelected, 6)));
                        updateReportTable();
                        stmt.executeUpdate("UPDATE Users SET credit = " + studentCredit + " WHERE username=" + studentUserName);
                        student_credit_label.setText("" + studentCredit);
                        student_credit_label_2.setText("" + studentCredit);
                    } catch (SQLException e) {
                        System.out.println(e.getMessage());
                    }

                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());

            }

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void update_table() {
        /**
         * ********************
         * Connect to Database *********************
         */
        Connection conn = null;
        System.out.println("START");
        try {
            // db parameters  
            String url = "jdbc:sqlite:src\\my_package\\smane_database.db";
            // create a connection to the database  
            conn = DriverManager.getConnection(url);

            System.out.println("Connection to SQLite has been established.");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
//                    ٍهمه چی اوکیه
                    String query = "SELECT * FROM Foods WHERE Foods.date = \"" + ChoosenDate + "\" and Foods.meal = " + meal_combo.getSelectedIndex();
                    try ( Statement stmt = conn.createStatement()) {

                        ResultSet rs = stmt.executeQuery(query);
                        student_food_table.setModel(resultSetToTableModel(rs));

                    } catch (SQLException e) {
                        System.out.println(e.getMessage());
                    }

                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());

            }

        }
    }

    public void updateCredit() {
        /**
         * ********************
         * Connect to Database *********************
         */
        Connection conn = null;
        System.out.println("START");
        try {
            // db parameters  
            String url = "jdbc:sqlite:src\\my_package\\smane_database.db";
            // create a connection to the database  
            conn = DriverManager.getConnection(url);

            System.out.println("Connection to SQLite has been established.");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
//                    ٍهمه چی اوکیه
                    /*آپديت کردن اعتبار*/

                    String query = "SELECT credit from Users WHERE username=" + studentUserName;
                    try ( Statement stmt = conn.createStatement()) {
                        ResultSet rs = stmt.executeQuery(query);

                        studentCredit = rs.getInt("credit");
                    } catch (SQLException e) {
                        System.out.println(e.getMessage());
                    }

                    query = "SELECT SUM(price) FROM (SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.breakfast WHERE Reserves.breakfast = Foods.id) where username_id = " + studentUserName + " UNION SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.lunch WHERE Reserves.lunch = Foods.id) where username_id = " + studentUserName + " UNION SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.dinner WHERE Reserves.dinner = Foods.id) where username_id = " + studentUserName + ")";
                    String getFormerFoodPriceQuery = "SELECT price FROM (SELECT * FROM (SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.breakfast WHERE Reserves.breakfast = Foods.id) where username_id = " + studentUserName + " UNION SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.lunch WHERE Reserves.lunch = Foods.id) where username_id = " + studentUserName + " UNION SELECT * from (SELECT username_id,name,date,self,type,meal,price from Reserves INNER JOIN Foods on Reserves.dinner WHERE Reserves.dinner = Foods.id) where username_id = " + studentUserName + ")) WHERE meal = " + meal_combo.getSelectedIndex();
                    int selectedRow = student_food_table.getSelectedRow();
                    int currentFoodPrice = 0;
                    if (selectedRow != -1) {
                        currentFoodPrice = Integer.parseInt(String.valueOf(student_food_table.getValueAt(selectedRow, 6)));
                    }
                    try ( Statement stmt = conn.createStatement()) {
                        ResultSet rs = stmt.executeQuery(query);
                        int sum = rs.getInt("SUM(price)");

                        System.out.println(formerFoodPrice);
                        System.out.println(currentFoodPrice);
                        System.out.println(studentCredit);
                        System.out.println(sum);
                        if (isStart) {
//                            studentCredit = studentCredit-sum;
                            isStart = false;
                        } else {
                            studentCredit = studentCredit - currentFoodPrice + formerFoodPrice;
                        }

                        String queryUpdate = "UPDATE Users SET credit = " + studentCredit + " WHERE username = " + studentUserName;
                        stmt.executeUpdate(queryUpdate);
                        student_credit_label.setText("" + studentCredit);
                        student_credit_label_2.setText("" + studentCredit);
                    } catch (SQLException e) {
                        System.out.println(e.getMessage());
                    }

                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());

            }

        }
    }

    public static TableModel resultSetToTableModel(ResultSet rs) {
        try {
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector columnNames = new Vector();

            // Get the column names
            for (int column = 0; column < numberOfColumns; column++) {
                columnNames.addElement(metaData.getColumnLabel(column + 1));
            }

            // Get all rows.
            Vector rows = new Vector();

            while (rs.next()) {
                Vector newRow = new Vector();

                for (int i = 1; i <= numberOfColumns; i++) {
                    newRow.addElement(rs.getObject(i));
                }

                rows.addElement(newRow);
            }
            DefaultTableModel tableModel = new DefaultTableModel(rows, columnNames) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    //all cells false
                    return false;
                }
            };

//            return new DefaultTableModel(rows, columnNames);
            return tableModel;

        } catch (Exception e) {
            e.printStackTrace();

            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student_pannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student_pannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student_pannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_pannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student_pannel("9623053").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel date_label;
    private javax.swing.JTextField guest_username;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox meal_combo;
    private javax.swing.JRadioButton radio_btn_guest;
    private javax.swing.JLabel report_date_label;
    private javax.swing.JLabel student_credit_label;
    private javax.swing.JLabel student_credit_label_2;
    private javax.swing.JTable student_food_table;
    private javax.swing.JTable student_report_table;
    // End of variables declaration//GEN-END:variables
}
